name: "Working Push"
run-name: "Push on [${{ github.repository }}] @ ${{ github.ref }} by ${{ github.actor }} with ${{ github.event_name }}"

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:


permissions:
  contents: read
  actions: read


concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-push-main"
  cancel-in-progress: false

defaults:
  run:
    shell: zsh -l {0}

env:
  classification: on working push
  progression: 1


jobs:

  # This step is first, and is needed because GH env is only usable in steps;
  # See https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#env-context
  shared-global-variables:
    name: "Shared Global Variables"
    runs-on: self-hosted
    # Set Global Environment Variables directly from the workflow as run outputs.
    outputs:
      run_classification: ${{ env.classification }}
      run_progression: ${{ env.progression }}
    steps:
      - name: "Checkout repository source code at root"
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f
        timeout-minutes: 1
      - name: "Set Shared Global Variables"
        id: set-shared-global-variables-step
        timeout-minutes: 1
        env:
          transient_restriction: ${{ env.classification }}
          transient_progression: ${{ env.progression }}
        run:  ./util/src/main/sh/push-environment.sh true true "${{ env.classification }}" "${{ env.progression }}"

  local-build-yield-to-pull-request:
    if: ${{ needs.shared-global-variables.outputs.run_progression > 1 }}
    name: "Yield to Pull Request when PR exists"
    uses: ./.github/workflows/check-push-yield.yml
    needs: [ shared-global-variables ]
    with:
      default-branch: 'main'
      target-branch: 'main'
      restriction: "${{ needs.shared-global-variables.outputs.run_classification }}"


  local-build-host-environment-checks:
    name: "Sanity Checks build on Self-Hosted Runners"
    needs:
      - shared-global-variables
      - local-build-yield-to-pull-request
    uses: ./.github/workflows/push-environment-checks.yml
    with:
      restriction: "${{ needs.shared-global-variables.outputs.run_classification }}"
    if: |
      needs.shared-global-variables.outputs.run_progression > 2 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'


#
#  local-build-project-dependency-hints:
#    name: "Impromptu Project Dependencies Checks for Contributors"
#    needs: [ local-build-yield-to-pull-request ]
#    uses: ./.github/workflows/push-dependency-checks.yml
#    with:
#      restriction: "$RESTRICTION"
#      releases-only: false
#    secrets: inherit
#    if: |
#      progression > 2 &&
#      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'
#
#  local-build-codeql-scan:
#    name: "CodeQL Quality Scan on Self-Hosted Runners"
#    needs:
#      - local-build-yield-to-pull-request
#      - local-build-host-environment-checks
#    uses: ./.github/workflows/codeql-security-scan.yml
#    with:
#      restriction: "$RESTRICTION"
#    secrets: inherit
#    if: |
#      progression > 5 &&
#      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'
#
#
#  local-build-codacy-scan:
#    name: "Codacy Security Scan on Self-Hosted Runners"
#    needs:
#      - local-build-yield-to-pull-request
#      - local-build-host-environment-checks
#    uses: ./.github/workflows/codacy-security-scan.yml
#    with:
#      restriction: "$RESTRICTION"
#    secrets: inherit
#    if: |
#      progression > 6 &&
#      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'
#
#
#  local-build-qodana-scan:
#    name: "Qodana Security Scan on Self-Hosted Runners"
#    needs:
#      - local-build-yield-to-pull-request
#      - local-build-host-environment-checks
#    uses: ./.github/workflows/qodana-security-scan.yml
#    permissions:
#      checks: write
#      contents: write
#      pull-requests: write
#      statuses: write
#    with:
#      restriction: "$RESTRICTION"
#    secrets: inherit
#    if: |
#      progression > 7 &&
#      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'
#
#
#  workflow-cache-prune:
#    name: "Prune Caches by Branch on Self-Hosted Runners"
#    needs:
#      - local-build-yield-to-pull-request
#      - local-build-codacy-scan
#      - local-build-codeql-scan
#      - local-build-qodana-scan
#    uses: ./.github/workflows/cache-prune.yml
#    permissions:
#      contents: write
#      actions: write
#    secrets: inherit
#    with:
#      restriction: 'purge-local-caches'
#    if: |
#      progression > 3 &&
#      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'
#
#
#
#  workflow-runs-prune:
#    name: "Prune Stale Workflow Runs"
#    needs:
#      - local-build-yield-to-pull-request
#      - local-build-codacy-scan
#      - local-build-codeql-scan
#      - local-build-qodana-scan
#    uses: ./.github/workflows/actions-prune.yml
#    secrets: inherit
#    permissions:
#      actions: write
#      contents: write
#    with:
#      restriction: 'no restriction'
#    if: |
#      progression > 4 &&
#      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'
#
#  push-main-workflow-summary:
#    name: "Publish Summary of the Working Push"
#    needs:
#      - workflow-cache-prune
#      - workflow-runs-prune
#    if: always()
#    uses: ./.github/workflows/push-summary-workflow.yml
#    with:
#      restriction: "$RESTRICTION"
#      yielded: ${{ needs.local-build-yield-to-pull-request.outputs.bypass == 'true' }}
