Chapter 3: Repositories in GitHub
Repositories (repos) are the core of GitHub.
In this chapter, you’ll learn how to create, clone, manage, and delete repositories.

3.1 Creating a Repository
A repository is a collection of files that make up a project, stored in GitHub.

3.1.1 Creating a Repo on GitHub
Click New Repository from your GitHub dashboard.
Enter a Repository Name (e.g., my-project).
Choose Public or Private.
(Optional) Check:
Initialize with README (adds a basic README file).
Add .gitignore (ignores unnecessary files, e.g., node_modules).
Add a License (for open-source projects).
Click Create Repository.


3.1.2 Creating a Repo via GitHub CLI
Use the following command:
gh repo create my-project --public --clone

3.2 Cloning a Repository
Cloning allows you to create a local copy of a repository.

3.2.1 Clone an Existing Repository
Find the repository URL from GitHub and use:
git clone https://github.com/username/repo-name.git

Navigate into the directory:
cd repo-name

3.3 Managing Repository Files

3.3.1 Adding and Committing Changes
Create a new file:
echo "Hello, GitHub!" > hello.txt

Stage the changes:
git add hello.txt

Commit the changes:
git commit -m "Added hello.txt"
3.3.2 Pushing Changes to GitHub

Upload the changes to your repository:
git push origin main

3.4 Branching in Repositories
Branches allow you to work on new features without affecting the main codebase.

3.4.1 Creating a New Branch
git branch new-feature
git checkout new-feature
Or combine both:
git checkout -b new-feature

3.4.2 Pushing a New Branch to GitHub
git push -u origin new-feature

3.5 Managing Repository Settings
Collaborators: Add team members under Settings > Collaborators.
Branch Protection: Prevent force-pushes or direct commits to main.
Repo Deletion: Under Settings > Danger Zone.

3.6 Deleting a Repository
Warning: This action is irreversible!
Go to your repository.
Click Settings > Scroll to Danger Zone.
Click Delete this Repository and confirm.

3.7 Forking a Repository
Forking creates a personal copy of someone else’s repository.

3.7.1 How to Fork a Repo
Go to the repository you want to fork.
Click Fork (top-right corner).
The forked repo appears in your account.

3.7.2 Cloning a Forked Repo
After forking, clone it:
git clone https://github.com/your-username/forked-repo.git

3.7.3 Syncing a Fork
Keep your fork updated with the original repo:
git remote add upstream https://github.com/original-owner/original-repo.git
git fetch upstream
git merge upstream/main

3.8 Using .gitignore and Licenses
.gitignore: Prevents unnecessary files from being tracked (e.g., node_modules, *.log).
Licenses: Choose from open-source licenses like MIT, GPL, or Apache.

3.9 Practice Exercise
Create a repository with a README file.
Clone the repository to your computer.
Create a new file, commit, and push changes.
Create a new branch and switch to it.